% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allClasses.R, R/allGenerics.R, R/varSet.R
\docType{class}
\name{varSetList}
\alias{varSetList}
\alias{collapseVarSetList}
\alias{varSetList-class}
\alias{show,varSetList-method}
\alias{length,varSetList-method}
\alias{[[,varSetList,ANY,missing-method}
\alias{[,varSetList,ANY,ANY,ANY-method}
\alias{listUnits,varSetList-method}
\alias{listVarSets,varSetList-method}
\alias{getGdbId,varSetList-method}
\alias{getRvatVersion,varSetList-method}
\alias{getVarSet,varSetList-method}
\alias{write,varSetList-method}
\alias{as.data.frame,varSetList-method}
\alias{collapseVarSetList,varSetList-method}
\alias{metadata,varSetList-method}
\title{Class to manage multiple varSets}
\description{
An S4 class to manage varSets. varSets can be generated from annotations using
the \code{\link[=buildVarSet]{buildVarSet()}} method. Specific units and/or annotations can be retrieved using
the \code{getVarSet} method. A varSetList can be used directly as input in \code{\link[=assocTest]{assocTest()}} to perform
burden/single variant association tests on the varSets included in the varSetList.
The on-disk equivalent of a \code{varSetList} is \code{\link[=varSetFile]{varSetFile()}}, from which varSets can be retrieved
in the same way as a varset list using the \code{getVarSet} method.
}
\section{Build a varSetList}{

\itemize{
\item \code{buildVarSet(x, ...)}: Generate a varSetList or \code{\link[=varSetFile]{varSetFile()}} that stores weighted variant sets
for use in association testing. This can be based on 1) annotations uploaded to the gdb or 2) a data.frame including annotations.
See \code{\link[=buildVarSet]{buildVarSet()}} for details.
}
}

\section{Getters}{

In the following code snippets, x is a varSetList object.
\itemize{
\item \code{getVarSet(x, unit, varSetName)}: Retrieve varSets for specified units and/or varSetNames.
\item \code{listUnits(x)}: Return a vector of all units included in the varSetList.
\item \code{listVarSets(x)}: Return a vector of all varSetNames included in the varSetList.
\item \code{getGdbId(x)}: Get gdb ID from metadata
\item \code{metadata(x)}: Get metadata from varSetList
}
}

\section{Subsetting}{

A varSetList can be subsetted in the same way as a normal R list,
however, \code{getVarSet} is the most convenient way to select varSets (see above).
Some examples, where x is a varSetList object:
\itemize{
\item \code{x[[i]]}: Return the i'th varSet
\item \code{x[i:j]}: Return the i'th till j'th varSets
}
}

\section{Association testing}{

A varSetList can be directly supplied to the \code{\link[=assocTest]{assocTest()}} gdb method, using the
\code{varSet} parameter. Association tests will then be performed for each varSet included
in the varSetList.
}

\section{Miscellaneous}{

In the following code snippets, x is a varSetList object:
\itemize{
\item \verb{collapseVarSetList(x, unit = "unnamed", varSetName = "unnamed)}:
Merge all varSets into one varSet. All weights will be set to 1.
Optionally, the unit name and varSetName can be specified.
This method is mainly used when you want to load the genotypes for all variants
in a varSetList using \code{\link[=getGT]{getGT()}}.
\item \code{write(x, file = "data", append = "FALSE")}: Write the varSetList to disk, in
the \code{\link{varSetFile}} format.
}
}

\examples{
library(rvatData)

# connect to varsetfile from rvatData package
# to build a varsetfile, see ?buildVarSet
varsetfile <- varSetFile(rvat_example("rvatData_varsetfile.txt.gz"))

# extract a couple of genes from the varSetFile, which whill return a varSetList
varsetlist <- getVarSet(varsetfile, c("SOD1", "FUS"))
varsetlist

# many of the varSetFile methods are also available for a varSetList
# for example, getVarSet can also be used to extract specific genes or varSets from a varSetList
getVarSet(varsetlist, unit = "SOD1")

# list included units and varSets 
units <- listUnits(varsetlist)
head(units)
varsets <- listVarSets(varsetlist)
head(varsets)

# several basic list operations work on a varSetList
length(varsetlist)
varsetlist[1:2]
varsetlist[[1]]

# extract metadata
metadata(varsetlist)
getRvatVersion(varsetlist)
getGdbId(varsetlist)

# all varsets in in a varsetlist can be collapsed into one varSet using the
# collapseVarSetList method
collapseVarSetList(varsetlist)

# varSetLists can be written to a varSetFile on disk using the write method
output <- tempfile() 
write(varsetlist, output)
varsetfile <- varSetFile(output)
varsetfile

# see e.g., ?assocTest and ?aggregate for downstream methods that can loop through varSets included in a varSetlist

}
\seealso{
\code{\link{varSetFile}}

\code{\link{buildVarSet}}

\code{\link{getGT}}

\code{\link{assocTest}}
}
\keyword{varSetList}
