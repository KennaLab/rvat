% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allClasses.R, R/allGenerics.R, R/rvatResult.R,
%   R/gsaResult.R
\docType{class}
\name{rvatResult}
\alias{rvatResult}
\alias{topResult}
\alias{rvatResult-class}
\alias{rvbResult-class}
\alias{singlevarResult-class}
\alias{gsaResult-class}
\alias{writeResult,rvatResult-method}
\alias{getGdbId,rvatResult-method}
\alias{getGenomeBuild,rvatResult-method}
\alias{merge,rvatResult,data.frame-method}
\alias{merge,rvatResult,DataFrame-method}
\alias{topResult,rvatResult-method}
\alias{qqplot,rvatResult-method}
\alias{manhattan,rvatResult-method}
\alias{rvbResult}
\alias{summary,rvbResult-method}
\alias{ACAT,rvatResult-method}
\alias{singlevarResult}
\alias{summary,singlevarResult-method}
\alias{summary,gsaResult-method}
\title{Class for handling and visualizing results generated using rvat.}
\description{
The rvatResult class is specifically designed to represent association results
generated using RVAT (with \code{\link{assocTest}} or \code{\link{geneSetAssoc}} for example).
It extends the BioConductor \code{\link[S4Vectors]{DFrame}} class, and allows for basic
operations such as subsetting and merging as well as visualization (manhattan, qqplot, forest plots) and
downstream analyses (e.g. \code{\link{ACAT}}).
Different type of results have their own subclasses (rvbResult, singlevarResult, gsaResult) that inherit from
rvatResult.
}
\section{Constructing}{

\itemize{
\item \code{rvbResult(object, header = TRUE)}: Intitialize an \code{rvbResult} object,
including singlevar results as generated by the \code{\link{assocTest}} method.
\code{object} can be either a data.frame/DataFrame or a filepath pointing to the results.
\item \code{singlevarResult(object, header = TRUE)}: Intitialize an \code{singlevarResult} object,
including rvb results as generated by the \code{\link{assocTest}} method.
\code{object} can be either a data.frame/DataFrame or a filepath pointing to the results.
\item \code{gsaResult(object, header = TRUE)}: Intitialize an \code{singlevarResult} object,
including rvb results as generated by the \code{\link{geneSetAssoc}} or \code{\link{assocTest}} methods.
\code{object} can be either a data.frame/DataFrame or a filepath pointing to the results
\item \code{readResults(path, header = TRUE, type = NULL, sep = "\\t")}: Alternatively,
results can be read using \code{readResults} where \code{type} can be set to \code{rvbResult}/\code{singlevarResult}/\code{gsaResult}.
If type is not set, it will be inferred from the input.
}
}

\section{Subsetting}{


Subsetting an rvatResult object is equivalent to subsetting a DataFrame/DFrame object and is fully described
in \code{\link[S4Vectors:DataFrame-class]{S4Vectors::DataFrame}}. DataFrame objects behave very
similar to the base \code{data.frame}, with the most notable exceptions that
row names are optional and it can hold alternative vectors such as run-length encoded  vectors (\code{\link[S4Vectors:Rle-class]{S4Vectors::Rle}}).
Please see the example section for examples.
}

\section{Merging}{

\itemize{
\item \code{merge(x, y, by)}: Merge an \code{rvatResult} object with a \code{data.frame} or \code{DataFrame} object.
The \code{by} parameter specifies which variables to join by.
For example, by = c("a" = "b") will match x$a to y$b.
Join by multiple variable by providing a vector of length>1 to \code{by}.
}
}

\section{Displaying}{

In the following code snippets, x is an rvatResult object
\itemize{
\item \code{show(x)}: By the default the number of rows and columns will be displayed + the first five rows.
\item \code{summary(x, asList = FALSE)}: Shows a summary of the contents of the \code{rvatResult}.
Optionally the output can be stored as a list by setting \code{asList = TRUE}.
\item \code{topResult(x, n=10)}: Show the top N most significant results (based on the P-value).
}
}

\section{Visualization}{

\itemize{
\item \code{qqplot}: Plot a qqplot based on the P-values stored in an rvatResult object. See \code{\link{qqplot}} for details
\item \code{manhattan}: Generate a manhattan plot for an \code{rvatResult} object. See \code{\link{manhattan}} for details.
\item \code{rvatViewer}: Interactive visualization, see \code{\link{rvatViewer}} for details.
}
}

\section{Downsteam analyses}{

\itemize{
\item \code{geneSetAssoc}: An \code{rvbResult} can be used as input for \code{geneSetAssoc} to perform
gene set analyses. See \code{\link{geneSetAssoc}} for details.
\item \code{ACAT}: P-values in an \code{rvbResult} can be combined using the ACAT method. See \code{\link{ACAT}} for details.
}
}

\section{Writing}{

\itemize{
\item \code{writeResult(x, ...)}: Write an \code{rvatResult} to disk, see \code{\link{writeResult}} for details.
}
}

\section{Getters}{

\itemize{
\item \code{getGdbId(x)}: Get the gdb ID
\item \code{getGenomeBuild(x)}: Get gdb genome build
}
}

\examples{

library(rvatData)
data(rvbresults)

# rvatResult inherits from the DataFrame classes
# standard methods also work on an rvatResult
head(rvbresults)
nrow(rvbresults)
ncol(rvbresults)
dim(rvbresults)
rvbresults_df <- as.data.frame(rvbresults)
head(rvbresults_df)
rvbresults[1:3,]
rvbresults[,1:10]
rvbresults[["unit"]][1:5]

# write results
file <- tempfile()
writeResult(rvbresults, file = file)
rvbresults <- rvbResult(file)

# similarly, for single variant results
data(GTsmall)
sv <- assocTest(
  GTsmall,
  covar = c("sex", paste0("PC", 1:4)),
  pheno = "pheno",
  test = "scoreSPA",
  singlevar = TRUE,
  verbose = FALSE
)
svresultfile <- tempfile()
writeResult(sv, file = svresultfile)
sv <- singlevarResult(sv)
head(sv)

# merge 
merge <- merge(rvbresults[1:23], as.data.frame(rvbresults[,c(1, 23:28)]), by = "unit")

# show summary
summary(rvbresults)

# show top results
topResult(rvbresults, n = 10)

# qqplot
man <- qqplot(rvbresults[rvbresults$varSetName == "ModerateImpact" & rvbresults$test == "firth",],
                 label = "unit")

# generate a manhattan plot
man <- manhattan(rvbresults[rvbresults$varSetName == "ModerateImpact" & rvbresults$test == "firth",],
                 label = "unit", 
                 contigs = "GRCh38")


# see ?ACAT and ?geneSetAssoc for downstream analyses on rvatResults

}
\seealso{
\code{\link{assocTest}}

\code{\link{geneSetAssoc}}

\code{\link{qqplot}}

\code{\link{manhattan}}
}
