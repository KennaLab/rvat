% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/varSet.R
\name{buildVarSet-gdb}
\alias{buildVarSet-gdb}
\alias{buildVarSet,gdb-method}
\title{buildVarSet-gdb}
\usage{
\S4method{buildVarSet}{gdb}(
  object,
  varSetName,
  unitTable,
  unitName,
  output = NULL,
  intersection = NULL,
  where = NULL,
  weightName = "1",
  verbose = TRUE
)
}
\arguments{
\item{object}{a \code{\link{gdb}} object.}

\item{varSetName}{Name to assign varSet grouping. This identifier column is used to allow for subsequent mergeing of multiple varSet files for coordinated analysis of multiple variant filtering/ weighting strategies)}

\item{unitTable}{Table containing aggregation unit mappings.}

\item{unitName}{Field to utilize for aggregation unit names.}

\item{output}{Output file name (output will be gz compressed text).}

\item{intersection}{Additional tables to filter through intersection (i.e. variants absent from intersection tables will not appear in output). Multiple tables should be ',' delimited.}

\item{where}{An SQL compliant where clause to filter output; eg: "CHROM=2 AND POS between 5000 AND 50000 AND AF<0.01 AND (cadd.caddPhred>15 OR snpEff.SIFT='D')".}

\item{weightName}{Field name for desired variant weighting, must be a column within unitTable or other intersection table. Default value of 1 is equivalent to no weighting.}

\item{verbose}{Should the function be verbose? Defaults to \code{TRUE}.}
}
\description{
Generate optionally weighted variant sets using annotation table(s) uploaded to the gdb.
See the tutorials for examples.
}
\examples{

library(rvatData)

# Build a varset including variants with a moderate predicted impact
gdb <- create_example_gdb()
varsetfile_moderate <- tempfile()
buildVarSet(object = gdb, 
            output = varsetfile_moderate,
            varSetName = "Moderate", 
            unitTable = "varInfo", 
            unitName = "gene_name",
            where = "ModerateImpact = 1")

# Build a varset that contains CADD scores
varsetfile_cadd <- tempfile()
buildVarSet(object = gdb, 
            output = varsetfile_cadd,
            varSetName = "CADD", 
            unitTable = "varInfo", 
            unitName = "gene_name",
            weightName = "CADDphred")
            
# connect to varsetfile and retrieve variant sets
varsetfile <- varSetFile(varsetfile_moderate)
varsets <- getVarSet(varsetfile, unit = c("SOD1", "FUS"))

# see ?getVarSet, ?varSetFile and ?varSetList for more details on connecting and handling varsetfiles.
# see e.g., ?assocTest and ?aggregate for downstream methods that can loop through varsetfiles and varsetlists.

}
